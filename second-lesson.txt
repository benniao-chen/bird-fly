推荐书籍： JavaScript权威指南(第六版)
博客： 阮一峰
Git书籍： 廖雪峰、https://gitbook.tw/

JS:
    默认执行顺序：
        从上至下，按顺序执行。
        异步最后运行，一个异步即为一个线程，缺点不可控，优点是不会阻塞代码运行。
        异步：AJAX、setTimeout、setInterval

    变量声明： 
        var、const、function
        ES6: let
    变量类型：    (JavaScript的变量是无类型变量，可赋值任意类型数据)
        数字:   Number
            范围: 
                -2的53次方~~~~2的53次方
            特点: 
                不区分浮点型和整形，有方法可以转换数字类型，parseInt()取整形、parseFloat()取浮点型\
            Math对象: 
                在F12调试面板console.log(Math)，查看Math对象属性
            加减乘除运算规则：
                浮点型不精确 0.1 + 0.2 不一定等于 0.3, 一定要转化为整数进行运算
        字符串: String
            定义:
                由单引号或者双引号括起来的字符序列。'12' 、"34"、'absc', 嵌套式字符串需注意单引号区别, 可使用转义字符
            转义字符：
                反斜线（\）
            正则表达式：
                定义： 
                    new RegExp();
                    /a/g;
                常用方法：
                    本身：/a/g.test() return true or false
                    常与String对象方法结合起来使用，replace()
            常问：
                如何删除一个字符串中所有的a?
        布尔:   Boolean
            定义：
                true、false
            转换：
                假值：flase == undefined、null、0、NaN、""
                真值：true == other
            运算符：
                ||      或运算, 取前值，提供默认值
                &&      和运算, 取后值，短路符
                ===     全等，数据类型也得相同
                ==      相等
                !=      不等
                !===    非全等
        null:   
            空值
        undefined:
            未定义
            null == undefined  => true
        对象:   Object
            形式： 
                {key: value}
            原型 prototype:

            JSON:
                JSON.stringify()
                JSON.parse()
            日期对象： new Date()
        数组:   Array
            定义
                数组是对象的特殊形式
            方法：
                join
                sort
                reverse
                cocat
                slice
                map
                filter

    类型转换：
        图
        显式转换：
            Number('3')
        隐式转换：
            ==、!!、、、 转换boolean值
            -  字符串转为数字
            +  数字转为字符串 (toString()), null 转为0

    
    变量： 
        声明：
            var、const、function(ES6: let)
            未声明变量，直接使用，默认为全局变量，严格模式下，会报错undefined。
            声明提前：
                var定义解析 
                console.log(a); var a = 1 => var a; console.log(a); a = 1;
        作用域：
            function {} 即为一个作用域 => 函数作用域
            作用域变量分析, 嵌套结构的作用域分析 ---- 作用域链（理解闭包）
            JS事件冒泡： HTML展现
        闭包：
            特性：
                可捕捉到局部变量和参数，并一直保存下来
            为何会产生问题：
                1.JS的垃圾回收机制，无用变量自动回收
                2.作用域链，变量查找方式
                基于这两条规则，函数调用外部变量，当外部变量产生变化时，函数运算结果出现问题。
            如何利用闭包去解决问题：
                让变量成为函数参数
            

    常用的运算符： 
        +, -, *, /(不是整除，带小数), %, !, ++, --, -=, += （++ -- 前后不一样，避免使用，容易出现问题，前增量后增量）
        唯一的三元运算符: ? :

    语句：
        if() {} else {}
        if() {} else if() {}
        switch(n){ case "": do; break; defaule: ;}
        for() {}
        array for(var i = 0; i < array.length; i ++) {}
        object for(var i in object) {}
        return  && break

        throw new Error('')
        try{}catch(e){}
        前端语法比较简单，主要是函数式思想，也是模块化思想


    函数:
        jquery的链式调用
        立即执行函数：
            (function(){

            })()
        闭包
        构造函数：
        原型：
        继承: https://www.cnblogs.com/humin/p/4556820.html
        var p = F.prototype;
        var c = p.constructor;
        c === F => true

    JS变量特性：
        对象：浅拷贝，深拷贝
            
            JSON方法的妙用


    客户端js:
        框架生命周期：HTML DOM渲染 + JS运行顺序
            window.onload = function() {}
                网页所有资源都加载完成，才运行，只能写一个
            $('document').ready(function(){})
                网页DOM结构加载完成，即运行，可写多个
        功能：(结合jQuery)
            查找DOM元素，查看其DOM对象属性：

            操作dom元素，修改css属性：

            在处理DOM元素，修改css属性的时候，处理一些必要的逻辑:
                
            绑定DOM事件：
                click、mouseover、mouseout、focus、

    动画：
        css3动画： 
            animation:
            transition:
            "transition":"opacity .4s ease,transform .4s ease"

            通过添加类名，移除类名实现。
            特点：
                动画效果不可控
        js动画：
            滚动到顶端



    鸭式辩型： 像鸭子一样走路、游泳并且嘎嘎叫的鸟就是鸭子.